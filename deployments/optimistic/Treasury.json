{
  "name": "Treasury",
  "address": "0x8dE8AFa08196Bb03fb8eE4cEe8BAdCe98fE4D063",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x219451d6394bdc60c3652a89fb794d2eec630baf8f9e08109d13768deb2203b6",
  "receipt": {
    "to": null,
    "from": "0xBB73463b88b0Cb9681f176d6D43a12C2FeA2c237",
    "contractAddress": "0x8dE8AFa08196Bb03fb8eE4cEe8BAdCe98fE4D063",
    "transactionIndex": 0,
    "gasUsed": "523362",
    "logsBloom": "0x
    "blockHash": "0xf8e070cb9f6a091eae936f7060e54254a0c32cba09e842bb07579a72a4a82fa9",
    "transactionHash": "0x219451d6394bdc60c3652a89fb794d2eec630baf8f9e08109d13768deb2203b6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5536794,
        "transactionHash": "0x219451d6394bdc60c3652a89fb794d2eec630baf8f9e08109d13768deb2203b6",
        "address": "0x8dE8AFa08196Bb03fb8eE4cEe8BAdCe98fE4D063",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000bb73463b88b0cb9681f176d6d43a12c2fea2c237"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf8e070cb9f6a091eae936f7060e54254a0c32cba09e842bb07579a72a4a82fa9"
      }
    ],
    "blockNumber": 5536794,
    "cumulativeGasUsed": "523362",
    "status": 1,
    "byzantium": true
  },
  "blockNumber": 5536794,
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4824b5d056196586c4572caef94d3062",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,address,uint256)\":{\"params\":{\"amount\":\"Approve amount.\",\"recipient\":\"Recipient.\",\"token\":\"Target token.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(address,address,uint256)\":{\"params\":{\"amount\":\"Transfer amount.\",\"recipient\":\"Recipient.\",\"token\":\"Target token.\"}},\"transferETH(address,uint256)\":{\"params\":{\"amount\":\"Transfer amount.\",\"recipient\":\"Recipient.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,address,uint256)\":{\"notice\":\"Approve token to recipient.\"},\"transfer(address,address,uint256)\":{\"notice\":\"Transfer token to recipient.\"},\"transferETH(address,uint256)\":{\"notice\":\"Transfer ETH to recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Treasury is Ownable {\\n  // solhint-disable-next-line no-empty-blocks\\n  receive() external payable {}\\n\\n  /**\\n   * @notice Transfer token to recipient.\\n   * @param token Target token.\\n   * @param recipient Recipient.\\n   * @param amount Transfer amount.\\n   */\\n  function transfer(\\n    IERC20 token,\\n    address recipient,\\n    uint256 amount\\n  ) external onlyOwner {\\n    require(amount > 0, \\\"Treasury::transfer: negative or zero amount\\\");\\n    require(recipient != address(0), \\\"Treasury::transfer: invalid recipient\\\");\\n    token.transfer(recipient, amount);\\n  }\\n\\n  /**\\n   * @notice Transfer ETH to recipient.\\n   * @param recipient Recipient.\\n   * @param amount Transfer amount.\\n   */\\n  function transferETH(address payable recipient, uint256 amount) external onlyOwner {\\n    require(amount > 0, \\\"Treasury::transferETH: negative or zero amount\\\");\\n    require(recipient != address(0), \\\"Treasury::transferETH: invalid recipient\\\");\\n    recipient.transfer(amount);\\n  }\\n\\n  /**\\n   * @notice Approve token to recipient.\\n   * @param token Target token.\\n   * @param recipient Recipient.\\n   * @param amount Approve amount.\\n   */\\n  function approve(\\n    IERC20 token,\\n    address recipient,\\n    uint256 amount\\n  ) external onlyOwner {\\n    uint256 allowance = token.allowance(address(this), recipient);\\n    if (allowance > 0) {\\n      token.approve(recipient, 0);\\n    }\\n    token.approve(recipient, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x16eb764552a099737c3552866a04ab5699bb223105a7370e812d2492ce4bd468\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61080d8061007e6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780637b1a49091461007c5780638da5cb5b1461009c578063beabacc8146100c8578063e1f21c67146100e8578063f2fde38b1461010857600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610128565b005b34801561008857600080fd5b5061007a6100973660046106e5565b610167565b3480156100a857600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100d457600080fd5b5061007a6100e3366004610733565b61029a565b3480156100f457600080fd5b5061007a610103366004610733565b610414565b34801561011457600080fd5b5061007a6101233660046106c1565b6105d6565b6000546001600160a01b0316331461015b5760405162461bcd60e51b81526004016101529061078d565b60405180910390fd5b6101656000610671565b565b6000546001600160a01b031633146101915760405162461bcd60e51b81526004016101529061078d565b600081116101f85760405162461bcd60e51b815260206004820152602e60248201527f54726561737572793a3a7472616e736665724554483a206e656761746976652060448201526d1bdc881e995c9bc8185b5bdd5b9d60921b6064820152608401610152565b6001600160a01b03821661025f5760405162461bcd60e51b815260206004820152602860248201527f54726561737572793a3a7472616e736665724554483a20696e76616c696420726044820152671958da5c1a595b9d60c21b6064820152608401610152565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610295573d6000803e3d6000fd5b505050565b6000546001600160a01b031633146102c45760405162461bcd60e51b81526004016101529061078d565b600081116103285760405162461bcd60e51b815260206004820152602b60248201527f54726561737572793a3a7472616e736665723a206e65676174697665206f722060448201526a1e995c9bc8185b5bdd5b9d60aa1b6064820152608401610152565b6001600160a01b03821661038c5760405162461bcd60e51b815260206004820152602560248201527f54726561737572793a3a7472616e736665723a20696e76616c696420726563696044820152641c1a595b9d60da1b6064820152608401610152565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e9190610711565b50505050565b6000546001600160a01b0316331461043e5760405162461bcd60e51b81526004016101529061078d565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561048957600080fd5b505afa15801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c19190610774565b9050801561054d5760405163095ea7b360e01b81526001600160a01b0384811660048301526000602483015285169063095ea7b390604401602060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610711565b505b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b390604401602060405180830381600087803b15801561059757600080fd5b505af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610711565b5050505050565b6000546001600160a01b031633146106005760405162461bcd60e51b81526004016101529061078d565b6001600160a01b0381166106655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610152565b61066e81610671565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106d357600080fd5b81356106de816107c2565b9392505050565b600080604083850312156106f857600080fd5b8235610703816107c2565b946020939093013593505050565b60006020828403121561072357600080fd5b815180151581146106de57600080fd5b60008060006060848603121561074857600080fd5b8335610753816107c2565b92506020840135610763816107c2565b929592945050506040919091013590565b60006020828403121561078657600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461066e57600080fdfea264697066735822122053c9b33c9497197ddc32e97b3c16cddcdc2c37c2ad501ebdc413e40807e61d0164736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c8063715018a6146100655780637b1a49091461007c5780638da5cb5b1461009c578063beabacc8146100c8578063e1f21c67146100e8578063f2fde38b1461010857600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610128565b005b34801561008857600080fd5b5061007a6100973660046106e5565b610167565b3480156100a857600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100d457600080fd5b5061007a6100e3366004610733565b61029a565b3480156100f457600080fd5b5061007a610103366004610733565b610414565b34801561011457600080fd5b5061007a6101233660046106c1565b6105d6565b6000546001600160a01b0316331461015b5760405162461bcd60e51b81526004016101529061078d565b60405180910390fd5b6101656000610671565b565b6000546001600160a01b031633146101915760405162461bcd60e51b81526004016101529061078d565b600081116101f85760405162461bcd60e51b815260206004820152602e60248201527f54726561737572793a3a7472616e736665724554483a206e656761746976652060448201526d1bdc881e995c9bc8185b5bdd5b9d60921b6064820152608401610152565b6001600160a01b03821661025f5760405162461bcd60e51b815260206004820152602860248201527f54726561737572793a3a7472616e736665724554483a20696e76616c696420726044820152671958da5c1a595b9d60c21b6064820152608401610152565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610295573d6000803e3d6000fd5b505050565b6000546001600160a01b031633146102c45760405162461bcd60e51b81526004016101529061078d565b600081116103285760405162461bcd60e51b815260206004820152602b60248201527f54726561737572793a3a7472616e736665723a206e65676174697665206f722060448201526a1e995c9bc8185b5bdd5b9d60aa1b6064820152608401610152565b6001600160a01b03821661038c5760405162461bcd60e51b815260206004820152602560248201527f54726561737572793a3a7472616e736665723a20696e76616c696420726563696044820152641c1a595b9d60da1b6064820152608401610152565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e9190610711565b50505050565b6000546001600160a01b0316331461043e5760405162461bcd60e51b81526004016101529061078d565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561048957600080fd5b505afa15801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c19190610774565b9050801561054d5760405163095ea7b360e01b81526001600160a01b0384811660048301526000602483015285169063095ea7b390604401602060405180830381600087803b15801561051357600080fd5b505af1158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190610711565b505b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b390604401602060405180830381600087803b15801561059757600080fd5b505af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610711565b5050505050565b6000546001600160a01b031633146106005760405162461bcd60e51b81526004016101529061078d565b6001600160a01b0381166106655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610152565b61066e81610671565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106d357600080fd5b81356106de816107c2565b9392505050565b600080604083850312156106f857600080fd5b8235610703816107c2565b946020939093013593505050565b60006020828403121561072357600080fd5b815180151581146106de57600080fd5b60008060006060848603121561074857600080fd5b8335610753816107c2565b92506020840135610763816107c2565b929592945050506040919091013590565b60006020828403121561078657600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461066e57600080fdfea264697066735822122053c9b33c9497197ddc32e97b3c16cddcdc2c37c2ad501ebdc413e40807e61d0164736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,address,uint256)": {
        "params": {
          "amount": "Approve amount.",
          "recipient": "Recipient.",
          "token": "Target token."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transfer(address,address,uint256)": {
        "params": {
          "amount": "Transfer amount.",
          "recipient": "Recipient.",
          "token": "Target token."
        }
      },
      "transferETH(address,uint256)": {
        "params": {
          "amount": "Transfer amount.",
          "recipient": "Recipient."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,address,uint256)": {
        "notice": "Approve token to recipient."
      },
      "transfer(address,address,uint256)": {
        "notice": "Transfer token to recipient."
      },
      "transferETH(address,uint256)": {
        "notice": "Transfer ETH to recipient."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}
